# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    contact_email: "gmovie@example.com"
    api_key: "%env(api_key)%"
    queue_host: "%env(queue_host)%"
    queue_port: "%env(queue_port)%"
    queue_rabbitmqUser: "%env(queue_rabbitmqUser)%"
    queue_pass: "%env(queue_pass)%"
    queue_exchange: "%env(queue_exchange)%"
    queue_queuedev: "%env(queue_queuedev)%"
    queue_queueprod: "%env(queue_queueprod)%"
    source_class: "https://api.themoviedb.org/3/"
    image_source: "https://image.tmdb.org/t/p/w500"
    countries_location: "/../../../config/countries.yaml"
    message_limit: 500
    container.dumper.inline_factories: true
    min_rating: 6.9
    template_dir: "/../../templates/mailer/notify_template.html.twig"
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/*"
        exclude: "../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]

    App\Event\:
        resource: "../src/Event"
    App\Event\Listener\EntryListener:
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.controller,
                  method: onKernelController,
              }
    App\Event\Listener\ExceptionListener:
        tags:
            - {
                  name: kernel.event_listener,
                  event: kernel.exception,
                  method: onKernelException,
              }
